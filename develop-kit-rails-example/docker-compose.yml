version: '3.7'
services:
  # The App
  app:
    build: .
    image: ${APPLICATION_IMAGE_NAME}:latest
    container_name: ${COMPOSE_PROJECT_NAME}_app
    command: sh -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
#    user: "${UID_GID}"
    volumes:
      - ./src:/example-app
    ports:
      - ${PORT_MAPPING_APP}
    environment:
      - DATABASE_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_SOCKET=${DATABASE_SOCKET}
    networks:
      - rails-network
  # The Database
  database:
    image: mysql
    container_name: ${COMPOSE_PROJECT_NAME}_database
    user: "${UID_GID}"
    volumes:
      - ./config/database/my.cnf:/etc/mysql/my.cnf
      - ./data/mysql:/var/lib/mysql
      - ./logs/mysql:/var/log/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - ${PORT_MAPPING_MYSQL}
    networks:
      - rails-network

  # redis
  cache:
    image: redis:alpine
    container_name: ${COMPOSE_PROJECT_NAME}_cache
    user: "${UID_GID}"
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - ${PORT_MAPPING_REDIS}
    volumes:
      - ./data/redis:/data
    networks:
      - rails-network

networks:
  rails-network:
    driver: ${NETWORKS_DRIVER}